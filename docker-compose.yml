version: '3'

services:

  prometheus:
    image: prom/prometheus
    #restart: always
    container_name: prometheus
    network_mode: "bridge"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      # - '--alertmanager.url=http://alertmanager:9093'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    # ports:
    #   - 37828:9090
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
      # - grok-exporter:grok-exporter
      - alertmanager:alertmanager
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    network_mode: "bridge"
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    # ports:
    #   - 29100:9100
    # restart: always

  alertmanager:
    network_mode: "bridge"
    container_name: alertmanager
    image: prom/alertmanager
    # ports:
    #   - 27840:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    #restart: always
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    network_mode: "bridge"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    # ports:
    #   - 33899:8080
    #restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    network_mode: "bridge"
    depends_on:
      - prometheus
    ports:
      - 49501:3000
    links:
      - prometheus:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    env_file:
      - config.monitoring

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    network_mode: "bridge"
    ports:
      - 37828:9090
      - 29100:9100
      - 27840:9093
      - 33899:8080
    volumes:
      - ./caddy/:/etc/caddy/
    environment:
      - ADMIN_USER=${ADMIN_USER:-jsongo}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-PyBuTGysZ8kLPK}
    restart: unless-stopped
    links:
      - alertmanager:alertmanager
      - prometheus:prometheus
      - cadvisor:cadvisor
      - node-exporter:node-exporter

  # grok-exporter:
  #   image: debian
  #   container_name: grok-exporter
  #   network_mode: "bridge"
  #   volumes:
  #     - /var/log/nginx:/log
  #     - ./grok-exporter:/data
  #   command: /data/grok_exporter -config /data/grok-config.yml
  #   restart: unless-stopped

  # log-exporter:
  #   image: debian
  #   container_name: log-exporter
  #   network_mode: "bridge"
  #   external_links:
  #       - "consul:consul"
  #   depends_on:
  #     - prometheus
  #   ports:
  #     - 19523:4040
  #   command: /nginx-log-exporter -config-file /nginx-logs-config.hcl
  #   volumes:
  #     - ../nginx-log-exporter:/nginx-log-exporter
  #     - ./nginx-logs-config.hcl:/nginx-logs-config.hcl
  #     - /var/log/nginx:/var/log/nginx
